### Title:    Lecture 4 Examples
### Author:   Kyle M. Lang
### Created:  2017-AUG-24
### Modified: 2017-SEP-19

rm(list = ls(all = TRUE))

install.packages(c("rgl"), repos = "http://cloud.r-project.org")

plotDir <- "../latexStuff/figures/"
dataDir <- "../data/"

library(rgl)
library(visreg)
library(xtable)
library(lattice)
library(colorspace)
library(plotly)
library(ppcor)
library(ggplot2)
library(DAAG)
library(MASS)
source("supportFunctions.R")

##### Example models

data(socsupport)

out0 <- lm(BDI ~ tangiblesat, data = socsupport)
summary(out0)

out1 <- lm(BDI ~ tangiblesat * gender, data = socsupport)
summary(out1)

socsupport$gender2 <- relevel(socsupport$gender, ref = "male")
levels(socsupport$gender2)

out2 <- lm(BDI ~ tangiblesat * gender2, data = socsupport)
summary(out2)

out3 <- lm(BDI ~ tangiblesat + gender, data = socsupport)
summary(out3)

round(coef(out3), 2)

coef(out1)
coef(out3)

##### Plots:

p1 <- ggplot(data = socsupport, mapping = aes(x = tangiblesat, y = BDI, colour = gender)) +
    theme_classic() +
    theme(text = element_text(family = "courier", size = 16))

?scale_color_discrete

cols <- rep("blue", nrow(socsupport))
cols[socsupport$gender == "female"] <- "red"

p1 + geom_jitter(aes(colour = gender)) + scale_color_manual(values = c("red", "blue"))


?scale_colour_manual

p2 <- p1 + geom_jitter() +
    scale_colour_manual(name = "gender", values = c("red", "blue"))

p2 + geom_abline(slope     = coef(out1)["tangiblesat"],
                 intercept = coef(out1)[1],
                 colour    = "red",
                 size      = 1.5) +
    geom_abline(slope     = coef(out2)["tangiblesat"],
                intercept = coef(out2)[1],
                colour    = "blue",
                size      = 1.5)

p2 + geom_abline(slope     = coef(out3)["tangiblesat"],
                 intercept = coef(out3)[1],
                 colour    = "red",
                 size      = 1.5) +
    geom_abline(slope     = coef(out3)["tangiblesat"],
                intercept = (coef(out3)[1] + coef(out3)["gendermale"]),
                colour    = "blue",
                size      = 1.5)


dat1 <- readRDS("../data/diabetes.rds") 

dat1$age30  <- dat1$age - 30
dat1$ldl100 <- dat1$ldl - 100
dat1$hdl60  <- dat1$hdl - 60
dat1$bmi25  <- dat1$bmi - 25

out0 <- lm(bp ~ ldl + bmi, data = dat1)
summary(out0)

tmp0 <- visreg2d(fit       = out0,
                 x         = "bmi",
                 y         = "ldl",
                 plot.type = "persp",
                 col       = c("blue", "red"),
                 xlab      = "BMI",
                 ylab      = "LDL",
                 zlab      = "BP")

out1 <- lm(bp ~ ldl * bmi, data = dat1)
summary(out1)

tmp1 <- visreg2d(fit       = out1,
                 x         = "bmi",
                 y         = "ldl",
                 plot.type = "persp",
                 col       = c("blue", "red"),
                 xlab      = "BMI",
                 ylab      = "LDL",
                 zlab      = "BP")

z1 <- tmp1$z
x1 <- rep(tmp1$x, each = length(tmp1$y))
y1 <- rep(tmp1$y, length(tmp1$x))

ldlNorm <- with(dat1, (ldl - min(ldl)) / diff(range(ldl)))
bmiNorm <- with(dat1, (bmi - min(bmi)) / diff(range(bmi)))

ramp    <- colorRampPalette(c("red", "blue"))
n       <- 100
colsLdl <- ramp(n)[ldlNorm * (n - 1) + 1]
colsBmi <- ramp(n)[bmiNorm * (n - 1) + 1]

visFlag <- resid(out1) > 0

z2 <- z3 <- dat1$bp
z2[!visFlag] <- NA
z3[visFlag]  <- NA

rz   <- range(z1, dat1$bp)
m    <- 0.05
zLim <- c(rz[1] - m * diff(rz), rz[2] + m * diff(rz))

pdf(paste0(plotDir, "3d_data_plot.pdf"), family = "Courier")

cloud(x            = bp ~ ldl * bmi,
      data         = dat1,
      screen       = c(x = 290, y = 30, z = 10),
      scales       = list(col = "black", arrows = FALSE),
      xlab         = "LDL",
      ylab         = "BMI",
      zlab         = "BP",
      par.settings = list(axis.line = list(col = 0)),
      pch          = 20,
      col.point    = colsBmi,
      cex          = 2,
      zlim         = zLim)

dev.off()

myPanel <- function(x1, y1, z1, x2, y2, z2, z3, ...) {
    panel.cloud(x2, y2, z3, ...)
    panel.wireframe(x1, y1, z1, ...)
    panel.cloud(x2, y2, z2, ...)
}

pdf(paste0(plotDir, "response_surface_plot.pdf"), family = "Courier")

wireframe(x            = z1 ~ y1 * x1,
          drape        = FALSE,
          screen       = c(x = 290, y = 30, z = 10),
          scales       = list(col = "black", arrows = FALSE),
          xlab         = "LDL",
          ylab         = "BMI",
          zlab         = "BP",
          par.settings = list(axis.line = list(col = 0)),
          col.regions  = colors(), # Exploit bug to make wireframe transparent
          panel        = myPanel,
          x2           = dat1$ldl,
          y2           = dat1$bmi,
          z2           = z2,
          z3           = z3,
          pch          = 20,
          col.point    = colsBmi,
          cex          = 2,
          zlim         = zLim)

dev.off()


z1 <- tmp0$z
x1 <- rep(tmp0$x, each = length(tmp0$y))
y1 <- rep(tmp0$y, length(tmp0$x))

rz   <- range(z1, dat1$bp)
m    <- 0.05
zLim <- c(rz[1] - m * diff(rz), rz[2] + m * diff(rz))

pdf(paste0(plotDir, "response_surface_plot0.pdf"), family = "Courier")

wireframe(x            = z1 ~ y1 * x1,
          drape        = FALSE,
          screen       = c(x = 290, y = 30, z = 10),
          scales       = list(col = "black", arrows = FALSE),
          xlab         = "LDL",
          ylab         = "BMI",
          zlab         = "BP",
          par.settings = list(axis.line = list(col = 0)),
          col.regions  = colors(), # Exploit bug to make wireframe transparent
          panel        = myPanel,
          x2           = dat1$ldl,
          y2           = dat1$bmi,
          z2           = z2,
          z3           = z3,
          pch          = 20,
          col.point    = colsBmi,
          cex          = 2,
          zlim         = zLim)

dev.off()



dat2 <- dat1[ , c("ldl", "age", "bmi")]
    
colMeans(dat1)
apply(dat1, 2, sd)
apply(dat1, 2, range)

mean(dat1$bp)
sd(dat1$bp)

out0 <- lm(age ~ sexF, data = dat1)
summary(out0)

out1 <- lm(bp ~ age, data = dat1)
out2 <- lm(bp ~ age + bmi, data = dat1)

anova(out1, out2)

out3 <- lm(bp ~ age + ldl + hdl, data = dat1)
out4 <- lm(bp ~ age + ldl + hdl + bmi, data = dat1)

tab1 <- rbind(coef(out3)[-c(1, 2)], coef(out4)[-c(1, 2, 5)])
tab1

rownames(tab1) <- c("Chol. Only", "With BMI")
colnames(tab1) <- c("LDL", "HDL")
xTab1 <- xtable(tab1, align = c("r|", "c|", "c|"), digits = 2)
print(xTab1)


s0 <- summary(out0)
s1 <- summary(out1)
s2 <- summary(out2)

f0 <- s0$fstat

pf(f0[1], f0[2], f0[3], lower = FALSE)

fStat <- s1$fstatistic["value"]
tStat <- s1$coefficients["age", "t value"]

colnames(dat1)

summary(dat1)

ls(s1)

tStat - sqrt(fStat)

summary(out2)$r.squared - summary(out1)$r.squared
anova(out1, out2)

ls(summary(out2))

out0 <- lm(bp ~ age, data = dat1)
summary(out0)

out1 <- lm(bp ~ age + ldl + hdl, data = dat1)
summary(out1)

out2 <- lm(bp ~ age + ldl + hdl + bmi, data = dat1)
summary(out2)

anova(out1, out2)

out3 <- lm(bp ~ age + bmi, data = dat1)
summary(out3)

anova(out3, out2)

with(dat1, cor(ldl, hdl))

out2 <- lm(bp ~ bmi + age, data = dat1)
summary(out2)

out3 <- lm(bp ~ age + bmi + ldl + hdl, data = dat1)
summary(out3)

with(dat1, mean(bmi[age == 30]))

with(dat1, tapply(bmi, age, mean))

summary(lm(bp ~ bmi*ldl, data = dat1))


cor(dat1[ , c("ldl", "age", "bmi")])

anova(out3, out4)




#### F plots

??fd

?FDist

x <- seq(0, 5, 0.01)
fDat <- data.frame(x = x,
                   y = df(x, 5, 500)
                   )

p3 <- ggplot(data = fDat, mapping = aes(x = x, y = y)) +
    theme_classic() +
    theme(text = element_text(size = 16, family = "Courier")) +
    labs(x = "F", y = "Density", title = "Sampling distribution of F(5, 500)") +
    theme(plot.title = element_text(size = 20, face = "bold", hjust = 0.5))

p3 + geom_line()

plot(x = x, y = y, type = "l")

#### PPCOR Examples

with(mtcars, cor.test(hp, mpg))
with(mtcars, pcor.test(hp, mpg, wt))
with(mtcars, spcor.test(mpg, hp, wt))

out1 <- lm(mpg ~ hp, data = mtcars)
out2 <- lm(mpg ~ hp + wt, data = mtcars)

s1 <- summary(out1)
s2 <- summary(out2)

s2$r.sq - s1$r.sq

with(mtcars, spcor.test(mpg, wt, hp))["estimate"]^2




data(iris)

mDat              <- iris[ , c("Petal.Length", "Species")]
colnames(mDat)    <- c("sat", "majF")
levels(mDat$majF) <- c("law", "econ", "ds")
mDat$majN         <- as.numeric(mDat$maj)

saveRDS(mDat, paste0(dataDir, "major_data.rds"))

summary(lm(sat ~ majN, data = mDat))

mDat <- readRDS(paste0(dataDir, "major_data.rds"))


gender <- factor(sample(c("male", "female"), 10, TRUE))
male   <- as.numeric(model.matrix(~gender)[ , -1])

tab1 <- data.frame(gender, male)

drink <- factor(sample(c("coffee", "tea", "juice"), 10, TRUE))
codes <- model.matrix(~drink)[ , -1]
colnames(codes) <- c("juice", "tea")

drink
codes

xTab3 <- xtable(data.frame(drink, codes), digits = 0)
print(xTab3, booktabs = TRUE)

library(psych)
data(bfi)

colnames(bfi)

bfi$gender

codes[drink == "coffee", ] <- -1
codes

data(mtcars)
data(Cars93)

?mtcars
?Cars93

mtOpt <- model.matrix(~Cars93$Man.trans.avail)[ , -1]
drive <- model.matrix(~Cars93$DriveTrain)[ , -1]

colnames(drive) <- c("front", "rear")

mtOpt.ec <- mtOpt
mtOpt.ec[mtOpt == 0] <- -1

drive.ec <- drive
drive.ec[rowSums(drive) == 0, ] <- -1
colnames(drive.ec) <- c("front.ec", "rear.ec")

dat1 <- data.frame(price = Cars93$Price,
                   mtOpt,
                   mtOpt.ec,
                   drive,
                   drive.ec)

saveRDS(dat1, paste0(dataDir, "cars_data.rds"))

head(dat1)

out1 <- lm(Price ~ Man.trans.avail, data = Cars93)
summary(out1)

out1.1 <- lm(price ~ mtOpt, data = dat1)
summary(out1.1)

out2 <- lm(Price ~ DriveTrain, data = Cars93)
summary(out2)

out2.2 <- lm(price ~ front + rear, data = dat1)
summary(out2.2)

out3 <- lm(price ~ mtOpt.ec, data = dat1)
summary(out3)

y <- dat1$price
x <- dat1$mtOpt.ec
x[x == 1] <- 0.5
x[x == -1] <- -0.5

out3.2 <- lm(y ~ x)
summary(out3.2)

coef(out3)[1] - mean(dat1$price)

mean(tapply(dat1$price, dat1$mtOpt, mean))

colnames(Cars93)

with(Cars93, plot(Horsepower, MPG.city))

p1 <- ggplot(data = Cars93, mapping = aes(x = Horsepower, y = MPG.city)) +
    theme_classic()
p2 <- p1 + geom_point() +
    theme(text = element_text(family = "Courier", size = 16))

p2 + geom_smooth(method = "lm", formula = y ~ x, se = FALSE) +
    geom_smooth(method = "lm", formula = y ~ x + I(x^2), se = FALSE, colour = "red") +
    xlim(c(0, 350)) +
    theme(axis.line.y = element_line(colour = "white")) +
    geom_vline(xintercept = 0)

p2 + geom_smooth(method = "lm", formula = y ~ x + I(x^2) + I(x^3), se = FALSE)

p2 + geom_smooth(method = "lm", formula = y ~ x + I(x^2) + I(x^3) + I(x^4), se = FALSE)


Cars93$hpC <- with(Cars93, Horsepower - mean(Horsepower))

p1 <- ggplot(data = Cars93, mapping = aes(x = hpC, y = MPG.city)) +
    theme_classic()
p2 <- p1 + geom_point() +
    theme(text = element_text(family = "Courier", size = 16))

p22 <- p2 + geom_smooth(method = "lm", formula = y ~ x + I(x^2), se = FALSE, colour = "red") +
    geom_vline(xintercept = 0) +
    xlab("Horsepower") +
    ylab("MPG") +
    xlim(c(-100, 200))


p33 <- p22 + theme(axis.line.y = element_line(colour = "white"))

tmp <- lm(MPG.city ~ hpC + I(hpC^2), data = Cars93)

p33 + geom_abline(slope = coef(tmp)[2], intercept = coef(tmp)[1], colour = "purple") 


p2 + geom_smooth(method = "lm", formula = y ~ x + I(x^2) + I(x^3), se = FALSE)

p2 + geom_smooth(method = "lm", formula = y ~ x + I(x^2) + I(x^3) + I(x^4), se = FALSE)
